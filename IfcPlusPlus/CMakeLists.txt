CMAKE_MINIMUM_REQUIRED (VERSION 3.7.2)

IF(NOT WIN32)
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
ENDIF(NOT WIN32)

FIND_PACKAGE(Boost REQUIRED)
IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS}) 
ENDIF()

INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} src/)
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSG_INCLUDE_DIR} )

LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}) 
FILE (GLOB ifc4_source "src/ifcpp/IFC4/lib/*.cpp")

SET(IFCPP_SOURCE_FILES 
  src/ifcpp/IFC4/EntityFactory.cpp
  src/ifcpp/IFC4/TypeFactory.cpp
  src/ifcpp/model/BuildingModel.cpp
  src/ifcpp/model/UnitConverter.cpp
  src/ifcpp/reader/AbstractReader.cpp
  src/ifcpp/reader/ReaderSTEP.cpp
  src/ifcpp/reader/ReaderXML.cpp
  src/ifcpp/reader/ReaderUtil.cpp
  src/ifcpp/writer/WriterSTEP.cpp
  src/ifcpp/writer/WriterUtil.cpp

  ${ifc4_source}
)

IF(CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
ELSE(CMAKE_COMPILER_IS_GNUCXX)
ENDIF()

if (MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /bigobj ")
    ADD_DEFINITIONS(/wd4100 /wd4189)
ENDIF()

IF(BUILD_STATIC_LIBRARY)
    ADD_LIBRARY(IfcPlusPlus STATIC ${IFCPP_SOURCE_FILES})
ELSE(BUILD_STATIC_LIBRARY)
    ADD_DEFINITIONS(-DIFCQUERY_AS_DYNAMIC_LIBRARY)
    ADD_DEFINITIONS(-DIFCQUERY_LIB)
    ADD_LIBRARY(IfcPlusPlus SHARED ${IFCPP_SOURCE_FILES})
ENDIF(BUILD_STATIC_LIBRARY)

set_target_properties(IfcPlusPlus PROPERTIES DEBUG_POSTFIX "d")
set_target_properties(IfcPlusPlus PROPERTIES LINK_FLAGS_DEBUG "/debug /INCREMENTAL:NO")

INSTALL(
    DIRECTORY   src/ifcpp
    DESTINATION include
    FILES_MATCHING PATTERN "*.h"
)
INSTALL(
    TARGETS IfcPlusPlus
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)
if(MSVC)
    IF(CMAKE_GENERATOR MATCHES "^Visual Studio")
        install(FILES ${IFCPP_BINARY_DIR}/IfcPlusPlus/Debug/IfcPlusPlus${LIBRARY_SUFFIX}${CMAKE_DEBUG_POSTFIX}.pdb
          DESTINATION lib
          CONFIGURATIONS Debug
        )
        install(FILES ${IFCPP_BINARY_DIR}/IfcPlusPlus/RelWithDebInfo/IfcPlusPlus${LIBRARY_SUFFIX}.pdb
          DESTINATION lib
          CONFIGURATIONS RelWithDebInfo
        )
    ELSE()
        install(FILES ${IFCPP_BINARY_DIR}/IfcPlusPlus/IfcPlusPlus${LIBRARY_SUFFIX}${CMAKE_DEBUG_POSTFIX}.pdb
          DESTINATION lib
          CONFIGURATIONS Debug
        )
        install(FILES ${IFCPP_BINARY_DIR}/IfcPlusPlus/IfcPlusPlus${LIBRARY_SUFFIX}.pdb
          DESTINATION lib
          CONFIGURATIONS RelWithDebInfo
        )
    ENDIF()
ENDIF ()
